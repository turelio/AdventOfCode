# 2023-12-04
#Start	15:15
#Part1	17:09	break, 90min
#Part2	18:06 	57min
#Total	147min
# FUCK INTCODE
test='3,225,1,225,6,6,1100,1,238,225,104,0,1101,86,8,225,1101,82,69,225,101,36,65,224,1001,224,-106,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,102,52,148,224,101,-1144,224,224,4,224,1002,223,8,223,101,1,224,224,1,224,223,223,1102,70,45,225,1002,143,48,224,1001,224,-1344,224,4,224,102,8,223,223,101,7,224,224,1,223,224,223,1101,69,75,225,1001,18,85,224,1001,224,-154,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1101,15,59,225,1102,67,42,224,101,-2814,224,224,4,224,1002,223,8,223,101,3,224,224,1,223,224,223,1101,28,63,225,1101,45,22,225,1101,90,16,225,2,152,92,224,1001,224,-1200,224,4,224,102,8,223,223,101,7,224,224,1,223,224,223,1101,45,28,224,1001,224,-73,224,4,224,1002,223,8,223,101,7,224,224,1,224,223,223,1,14,118,224,101,-67,224,224,4,224,1002,223,8,223,1001,224,2,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,677,677,224,102,2,223,223,1005,224,329,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,1107,677,226,224,1002,223,2,223,1006,224,359,1001,223,1,223,107,677,677,224,102,2,223,223,1005,224,374,101,1,223,223,1108,677,226,224,102,2,223,223,1005,224,389,1001,223,1,223,1007,677,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,677,226,224,102,2,223,223,1005,224,419,101,1,223,223,1108,226,677,224,102,2,223,223,1006,224,434,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,449,101,1,223,223,1008,677,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,1108,226,226,224,1002,223,2,223,1005,224,479,1001,223,1,223,1007,226,677,224,102,2,223,223,1005,224,494,1001,223,1,223,1007,226,226,224,102,2,223,223,1005,224,509,101,1,223,223,107,677,226,224,1002,223,2,223,1006,224,524,1001,223,1,223,108,677,677,224,102,2,223,223,1006,224,539,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,554,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,569,101,1,223,223,108,677,226,224,1002,223,2,223,1006,224,584,101,1,223,223,108,226,226,224,102,2,223,223,1006,224,599,1001,223,1,223,1107,226,226,224,102,2,223,223,1006,224,614,1001,223,1,223,8,226,677,224,102,2,223,223,1006,224,629,1001,223,1,223,107,226,226,224,102,2,223,223,1005,224,644,101,1,223,223,8,226,226,224,102,2,223,223,1006,224,659,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,674,101,1,223,223,4,223,99,226'
lista=test
lista=lista.split(',')
lista=[int(l) for l in lista]
print(max(lista))


def valmode(ex,ip,mode):
	if mode==1:
		# print('immediate')
		return ex[ip]
	else:
		return ex[ex[ip]]
def intcomp(ex, inp):
	out=[]
	print('executing', len(ex))
	test2=[(i,v) for i,v in enumerate(ex)]
	print(test2)
	i=0
	while ex[i]!=99:
		print(f'looking at value {ex[i]} at {i}')
		opcode=ex[i]%100
		modes=list(str(ex[i]//100))
		modes=[int(m) for m in modes][::-1]+[0]*(3-len(modes))
		if opcode==99:
			break
		# opcode=ex[i]
		# valmode(i,modes,ex)
		print(f'\topcode {opcode}, modes {modes}')
		# val=valmode(i,modes,ex)
		if opcode==1:
			paras=ex[i+1:i+4]
			val1=valmode(ex,i+1,modes[0])
			val2=valmode(ex,i+2,modes[1])
			result=val1+val2
			val3=ex[i+3]
			print('\t',modes)
			print('\t',paras)
			print('\t',[val1,val2])
			print(f'\t{result} ({val1}+{val2}) written to {val3} (prev {ex[val3]})')
			ex[val3]=result
			i+=4
		# mult
		elif opcode==2:
			val1=valmode(ex,i+1,modes[0])
			val2=valmode(ex,i+2,modes[1])
			result=val1*val2
			val3=ex[i+3]
			ex[val3]=result
			print(f'\t{result} written to i {val3}')

			i+=4
		# save input to i+1
		elif opcode==3:
			print(f'\tinput {inp} written to {ex[i+1]} (prev {ex[ex[i+1]]})')
			ex[ex[i+1]]=inp
			i+=2
		# output value at i+1
		elif opcode==4:
			# print(i+1)
			val1=valmode(ex,i+1,modes[0])
			out.append(val1)
			print(f'\toutput value: {val1}')
			i+=2
		# print(ex)
		#jump-if-true
		elif opcode==5:
			paras=ex[i+1:i+3]
			val1=valmode(ex,i+1,modes[0])
			val2=valmode(ex,i+2,modes[1])
			# val2=ex[i+2]
			print('\t',modes)
			print('\t',paras)
			print('\t',[val1,val2])
			if val1!=0:
				print(f'\t{val1}!=0, jumping to i={val2}')
				i=val2
			else:	
				print(f'\t{val1}=0, moving normally')
				i+=3
		# jump-if-false
		elif opcode==6:
			val1=valmode(ex,i+1,modes[0])
			val2=valmode(ex,i+2,modes[1])
			# val1=ex[i+1]
			# val2=ex[i+2]
			print('\t',val1,val2)
			if val1==0:
				print(f'\tnew i = {val2}')
				i=val2
			else:	
				i+=3
		# less than
		elif opcode==7:
			val1=valmode(ex,i+1,modes[0])
			val2=valmode(ex,i+2,modes[1])
			val3=ex[i+3]
			if val1<val2:
				ex[val3]=1
			else:
				ex[val3]=0
			i+=4
		# equals
		elif opcode==8:
			paras=ex[i+1:i+4]
			val1=valmode(ex,i+1,modes[0])
			val2=valmode(ex,i+2,modes[1])
			val3=ex[i+3]
			print('\t',modes)
			print('\t',paras)
			print('\t',[val1,val2,val3])

			if val1==val2:
				print(f'\tequal, writing 1 to {val3} (prev ({ex[val3]}))')
				ex[val3]=1
			else:
				print(f'\tunequal, writing 0 to {val3} (prev ({ex[val3]}))')
				ex[val3]=0
			i+=4
	# print(f'encountered {ex[i]} at {i}')
		else:
			print('bad opcode', opcode)
			break
	return out[-1]

test=[3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]
# test=[3,3,1105,-1,9,1101,0,0,12,4,12,99,1]
# test=[3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]
print(intcomp(lista,5))
# print(silver)
# for i in range(100):
# 	for j in range(100):
# 		if intcomp(code,i,j)==19690720:
# 			print(i*100+j)
# print(intcomp(code,12,2))